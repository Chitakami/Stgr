
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Объект.ДатаНачала = Дата(1, 1, 1) И Не Объект.ДатаКонца = Дата(1, 1, 1) Тогда
		ЭтотОбъект.ПериодДок.ДатаНачала = Объект.ДатаНачала;
		ЭтотОбъект.ПериодДок.ДатаОкончания = Объект.ДатаКонца;		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПериодДокПриИзмененииНаСервере()
	Объект.ДатаНачала = ЭтотОбъект.ПериодДок.ДатаНачала;
	Объект.ДатаКонца = ЭтотОбъект.ПериодДок.ДатаОкончания;
КонецПроцедуры

&НаКлиенте
Процедура ПериодДокПриИзменении(Элемент)
	ПериодДокПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КонтрольДатыИКурсов()
	ТекущиеДанные = Элементы.ТаблицаРасписание.ТекущиеДанные;
	Для каждого Строка из объект.ТаблицаРасписание цикл
		Если  Не Строка.Курс  = ТекущиеДанные.Курс и Строка.Класс = ТекущиеДанные.Класс и не ТекущиеДанные.НомерСтроки = Строка.НомерСтроки тогда
			Если Строка.ДатаНачалаКурса < ТекущиеДанные.ДатаНачалаКурса и Строка.ДатаОкончанияКурса > ТекущиеДанные.ДатаОкончанияКурса тогда 
				Сообщить("Данный период времени занят: измените дату начала и дату окончания курсов");
				ТекущиеДанные.ДатаНачалаКурса = Дата('00010101');
				ТекущиеДанные.ДатаОкончанияКурса = Дата('00010101');
				//ТекущиеДанные.ДлительностьКурса = 0;
				//ТекущиеДанные.Преподаватель = ПредопределенноеЗначение("Справочник.Преподователи.ПустаяСсылка");
				//ТекущиеДанные.ОбъемЧасов = ПредопределенноеЗначение("Справочник.ОбъемЧасов.ПустаяСсылка");
				//ТекущиеДанные.Нагрузка = 0;
			ИначеЕсли  Не Строка.Курс  = ТекущиеДанные.Курс и Строка.Класс = ТекущиеДанные.Класс и не ТекущиеДанные.НомерСтроки = Строка.НомерСтроки   тогда
				Сообщить("Этот период уже занят: Курс " + Строка.Курс + " Класс " + Строка.Класс + " Номер строки " + Строка.НомерСтроки + " Дата начала курса " + Формат(Строка.ДатаНачалаКурса, "ДФ=dd.MM.yyyy") + " Дата окончания курса " + Формат(Строка.ДатаОкончанияКурса, "ДФ=dd.MM.yyyy"));
				ТекущиеДанные.ДатаНачалаКурса = Дата('00010101');
				ТекущиеДанные.ДатаОкончанияКурса = Дата('00010101');
				ТекущиеДанные.Класс = ПредопределенноеЗначение("Справочник.Класс.ПустаяСсылка");
				//ТекущиеДанные.Курс = ПредопределенноеЗначение("Справочник.Курсы.ПустаяСсылка");
				//ТекущиеДанные.ДлительностьКурса = 0;
				//ТекущиеДанные.Преподаватель = ПредопределенноеЗначение("Справочник.Преподаватели.ПустаяСсылка");
				//ТекущиеДанные.ОбъемЧасов = ПредопределенноеЗначение("Справочник.ОбъемЧасов.ПустаяСсылка");
				//ТекущиеДанные.Нагрузка = 0;
			ИначеЕсли Строка.ДатаНачалаКурса > ТекущиеДанные.ДатаНачалаКурса и Строка.ДатаОкончанияКурса > ТекущиеДанные.ДатаОкончанияКурса тогда
				Сообщить("Данный период времени занят: измените дату начала курса");
				ТекущиеДанные.ДатаНачалаКурса = Дата('00010101');
				ТекущиеДанные.ДатаОкончанияКурса = Дата('00010101');
				//ТекущиеДанные.ДлительностьКурса = 0;
			//	//ТекущиеДанные.Преподаватель = ПредопределенноеЗначение("Справочник.Преподователи.ПустаяСсылка");
			//	//ТекущиеДанные.ОбъемЧасов = ПредопределенноеЗначение("Справочник.ОбъемЧасов.ПустаяСсылка");
			//	//ТекущиеДанные.Нагрузка = 0;
			ИначеЕсли  Строка.ДатаНачалаКурса < ТекущиеДанные.ДатаНачалаКурса и Строка.ДатаОкончанияКурса < ТекущиеДанные.ДатаОкончанияКурса тогда
				Сообщить("Данный период времени занят: измените дату окончания курса");
				ТекущиеДанные.ДатаНачалаКурса = Дата('00010101');
				ТекущиеДанные.ДатаОкончанияКурса = Дата('00010101');
			//	//	//ТекущиеДанные.ДлительностьКурса = 0;
			//	//ТекущиеДанные.Преподаватель = ПредопределенноеЗначение("Справочник.Преподователи.ПустаяСсылка");
			//	//ТекущиеДанные.ОбъемЧасов = ПредопределенноеЗначение("Справочник.ОбъемЧасов.ПустаяСсылка");
			//	//ТекущиеДанные.Нагрузка = 0;
				
			КонецЕсли;
		ИначеЕсли Строка.Курс  = ТекущиеДанные.Курс и Строка.Класс = ТекущиеДанные.Класс и не ТекущиеДанные.НомерСтроки = Строка.НомерСтроки и строка.ДатаНачалаКурса = ТекущиеДанные.ДатаНачалаКурса и Строка.ДатаОкончанияКурса = ТекущиеДанные.ДатаОкончанияКурса тогда
			Сообщить ("Запись уже существует: Курс " + Строка.Курс + " Класс " + Строка.Класс + " Номер строки " + Строка.НомерСтроки + " Дата начала курса " + Формат(Строка.ДатаНачалаКурса, "ДФ=dd.MM.yyyy") + " Дата окончания курса " + Формат(Строка.ДатаОкончанияКурса, "ДФ=dd.MM.yyyy"));
			ТекущиеДанные.ДатаНачалаКурса = Дата('00010101');
			ТекущиеДанные.ДатаОкончанияКурса = Дата('00010101');
			ТекущиеДанные.Класс = ПредопределенноеЗначение("Справочник.Класс.ПустаяСсылка");
			ТекущиеДанные.Курс = ПредопределенноеЗначение("Справочник.Курсы.ПустаяСсылка");
			ТекущиеДанные.ДлительностьКурса = 0;
			ТекущиеДанные.Преподаватель = ПредопределенноеЗначение("Справочник.Преподаватели.ПустаяСсылка");
			ТекущиеДанные.ОбъемЧасов = ПредопределенноеЗначение("Справочник.ОбъемЧасов.ПустаяСсылка");
			ТекущиеДанные.Нагрузка = 0;
		КонецЕсли
	КонецЦикла;
КонецПроцедуры	


//&НаКлиенте
//Процедура ТаблицаРасписаниеКурсПриИзменении(Элемент)
//	КонтрольПериодаПроведенияКурса();	 
//КонецПроцедуры



&НаКлиенте
Процедура ТаблицаРасписаниеДатаНачалаКурсаПриИзменении(Элемент)
	РассчетаНагрузки();
	КонтрольДатыИКурсов();
	
	КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРасписаниеДатаОкончанияКурсовПриИзменении(Элемент)
	
	КонецПроцедуры


//&НаКлиенте
//Процедура КонтрольПериодаПроведенияКурса()
//	ТекущиеДанные = Элементы.ТаблицаРасписание.ТекущиеДанные;
//	Если не ТекущиеДанные.ДатаНачалаКурса = дата('00010101') и не ТекущиеДанные.ДатаОкончанияКурса = дата('00010101') тогда
//		Если ТекущиеДанные.ДатаОкончанияКурса < ТекущиеДанные.ДатаНачалаКурса Тогда
//			Сообщить("Задан некорректный период");
//			ТекущиеДанные.ДатаНачалаКурса = дата('00010101');
//			ТекущиеДанные.ДатаОкончанияКурса = дата('00010101');
//			ТекущиеДанные.ДлительностьКурса = 0;
////		Иначе
////			
////		ТекущиеДанные.ДлительностьКурса = ТекущиеДанные.Нагрузка / ТекущиеДанные.ОбъемЧасов; 	
////			//ТекущиеДанные.ДлительностьКурса = (ТекущиеДанные.ДатаОкончанияКурса - ТекущиеДанные.ДатаНачалаКурса)/86400; 
////			//ТекущиеДанные.ОбъемЧасов = ТекущиеДанные.Нагрузка / ТекущиеДанные.ДлительностьКурса;
////			КонтрольДатыИКурсов();
////		КонецЕсли;
//КонецЕсли;
//КонецЕсли;

//КонецПроцедуры 

&НаКлиенте
Процедура ТаблицаРасписаниеКлассПриИзменении(Элемент)
	//КонтрольПериодаПроведенияКурса();
	КонтрольДатыИКурсов()
КонецПроцедуры

&Наклиенте
 Процедура РассчетаНагрузки()
	 ТекущиеДанные = Элементы.ТаблицаРасписание.ТекущиеДанные;
	 //НачальноеЗначениеДляОбъемЧасов();
	 //Если КонтрольДатыИКурсов() тогда
	 //ТекущиеДанные.ОбъемЧасов = 0;
		 ТекущиеДанные.ДлительностьКурса = ТекущиеДанные.Нагрузка / Число(Строка(ТекущиеДанные.ОбъемЧасов));
		 //ТекущиеДанные.ДлительностьКурса = ТекущиеДанные.Нагрузка / ТекущиеДанные.ОбъемЧасов;
		 Альфа = ТекущиеДанные.ДлительностьКурса;
		 Дата1 = Дата(2012,10,12);
		 Альфа = Формат(Дата1,"ДФ=dd.MM.yyyy");
		 
		 ТекущиеДанные.ДатаОкончанияКурса = ТекущиеДанные.ДатаНачалаКурса + (86400 * ТекущиеДанные.ДлительностьКурса);
		 //(ТекущиеДанные.ДлительностьКурса) + 2,"ДФ=dd.MM.yyyy" ) + ТекущиеДанные.ДатаНачалаКурса;
		 
	 //Иначе Сообщить("Заданы некоретные данные");
	 //    ТекущиеДанные.ДатаНачалаКурса = дата('00010101');
	 //    ТекущиеДанные.ДатаОкончанияКурса = дата('00010101');
	 //    ТекущиеДанные.ДлительностьКурса = 0;
	 //    ТекущиеДанные.Класс = ПредопределенноеЗначение("Справочник.Класс.ПустаяСсылка");
	 //    ТекущиеДанные.Курс = ПредопределенноеЗначение("Справочник.Курсы.ПустаяСсылка");
	 //    ТекущиеДанные.Преподаватель = ПредопределенноеЗначение("Справочник.Преподаватели.ПустаяСсылка");
	 //    ТекущиеДанные.Нагрузка = 0;
	 //    ТекущиеДанные.ОбъемЧасов = ("Справочник.ОбъемЧасов.ПустаяСсылка");
	 //КонецЕсли 			
	//КонтрольДатыИКурсов()
	 
 КонецПроцедуры

 
  
//&НаКлиенте
//Процедура ТаблицаРасписаниеНагрузкаПриИзменении(Элемент)
//	КонтрольДатыИКурсов();
//	 РассчетаНагрузки();
// КонецПроцедуры


&НаКлиенте
Процедура ТаблицаРасписаниеОбъемЧасовПриИзменении(Элемент)
	//КонтрольДатыИКурсов();
	 РассчетаНагрузки();
	 
 КонецПроцедуры
 

&НаСервере
Функция ВызовРегистраНагрузки (ДатаТек,ЭлементКурса)экспорт
	Отбор = Новый Структура; 
	Отбор.Вставить("Курс",ЭлементКурса);
	Ресурсы = РегистрыСведений.НагрузкаНаКурс.ПолучитьПоследнее(ДатаТек,Отбор); 
	
	
	Возврат  Ресурсы.Нагрузка;
	 
 КонецФункции


&НаКлиенте
 Процедура ТаблицаРасписаниеКурсПриИзменении(Элемент)
	 ТекущиеДанные = Элементы.ТаблицаРасписание.ТекущиеДанные;
	 ТекущиеДанные.Нагрузка = ВызовРегистраНагрузки (Объект.Дата, ТекущиеДанные.Курс);
	  КонецПроцедуры


 